name: gen bin

#on:
#  push:
#    branches:
      #- 'dev'
#      - 'releases/**'

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  generate-bin:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          #- goarch: amd64
          #  goos: darwin
          #- goarch: arm64
          #  goos: darwin
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Making exchaind
        run: | 
          go mod download 
          make install #WITH_ROCKSDB=$WITH_ROCKSDB LINK_STATICALLY=true

        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
      - name: Packaging...
        run: tar czf exchain-${{ matrix.goos }}-${{ matrix.goarch }}.tgz --absolute-names /home/runner/go/bin/exchain* LICENSE
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./exchain*.tgz
          asset_name: ./exchain*.tgz
          asset_content_type: application/zip
      #- name: Uploading assets...
      #  if: ${{ !env.ACT }}
      #  id: upload-release-asset
      #  uses: actions/upload-artifact@v2
        #env:
        #  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    name: exchain binary
      #    path: exchain*.tgz
